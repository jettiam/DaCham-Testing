<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.wdb3a.AdminMapper">
	<!-- <select id="listAll" resultType="orderList"> select orderCode, id, 
		dietCode, orderDate, price, orderItem, transportNum from orderList </select> -->
	<select id="listAll" resultType="OrderList">
		select b.dietCode, b.orderCode,
		b.id, a.dietName, b.orderDate, b.price,
		b.orderItemCode, 
		b.transportNum, c.orderItemName
		from diet a join
		orderlist b join
		orderitem c
		where a.dietCode=b.dietCode
		and
		b.orderItemCode = c.orderItemCode
		<include refid="search"></include>
	</select>
	<sql id="search">
		<if test="searchType != null">
			<if test="searchType == 't'.toString()">
				and b.id like CONCAT('%',#{keyword},'%')
			</if>
			<if test="searchType == 'c'.toString()">
				and a.dietName like CONCAT('%',#{keyword},'%')
			</if>
			<if test="searchType == 'a'.toString()">
				and c.orderItemName like CONCAT('%',#{keyword},'%')
			</if>
		</if> 
	</sql>

	<select id="read" resultType="OrderList">
		select b.dietCode, b.orderCode, b.id, a.dietName, b.orderDate,
		b.price,
		b.orderItemCode, b.transportNum, c.id, c.name, c.address,
		c.tel
		from
		diet a join orderlist b join member c
		where a.dietCode=b.dietCode
		and
		c.id=b.id
		and orderCode=#{orderCode};
	</select>


	<select id="foodStockList" resultType="FoodMInven">
		select foodMICode, foodMCode, foodMName, inAmount, inDate, outAmount,
		uint,
		price, exDate, inAmount-outAmount as stock
		from foodminven
		<include refid="foodsearch"></include>
	</select>
	<sql id="foodsearch">
		<if test="searchType != null">
			<if test="searchType == 't'.toString()">
				where foodMICode like CONCAT('%',#{keyword},'%')
			</if>
			<if test="searchType == 'c'.toString()">
				where foodMName like CONCAT('%',#{keyword},'%')
			</if>
		</if>
	</sql>
	

	<update id="refundupdate">
		update orderlist set orderItemCode=6
		where
		orderCode=#{orderCode} and orderItemCode BETWEEN 0 and 3
	</update>

	<update id="workupdate">
		update orderlist set orderItemCode=3
		where
		orderCode=#{orderCode}
		and orderItemCode = 2
	</update>

	<select id="foodMAmountRead" resultType="FoodMAmountRead">
		select
		b.foodMAmount,b.foodMCode,f.foodMName, f.price, f.unit, a.orderCode
		from (select
		d.sideDcode, o.orderCode from orderlist o, dietinfo d where
		o.ordercode=#{orderCode}
		and o.dietCode=d.dietCode) a, sidedinfo
		b,foodmaterial f
		where a.sideDCode=b.sideDCode and
		b.foodMCode=f.foodMCode;
	</select>
	<select id="chartList" resultType="ChartList"> <!--특정식단에 대한 이름, 판매량  -->
		select diet.dietName, sum(orderList.dietAmount) as sellAmount
		from orderlist, diet
		where orderlist.dietCode = diet.dietCode and orderlist.orderItemCode
		BETWEEN 3 and 5
		GROUP by diet.dietName;
	</select>
	<select id="chartprice" resultType="ChartPrice"><!-- 날짜에 대한 매출,판매량  -->
		select sum(price) as totalprice, orderDate, sum(dietAmount) as dietAmount
		from orderlist
		where orderItemCode BETWEEN 3 and 5 and orderDate BETWEEN CURDATE()-7 and CURDATE() 
		GROUP by orderDate;
	</select>
	<select id="chartprice1" resultType="ChartPrice"><!-- 날짜에 대한 매출,판매량  -->
		select sum(price) as totalprice, orderDate, sum(dietAmount) as dietAmount
		from orderlist
		where orderItemCode BETWEEN 3 and 5 and orderDate BETWEEN #{startdate} and #{enddate} 
		GROUP by orderDate;
	</select>
	<select id="all" resultType="OrderList">
	select b.dietCode, b.orderCode,
		b.id, a.dietName, b.orderDate, b.price,
		b.orderItemCode,
		b.transportNum, c.orderItemName
		from diet a join
		orderlist b join
		orderitem c
		where a.dietCode=b.dietCode
		and
		b.orderItemCode = c.orderItemCode
	</select>
	<!--orderList 페이지 내역 출력  -->
	<select id="orderAll" resultType="OrderList">
	select b.dietCode, b.orderCode,
		b.id, a.dietName, b.orderDate, b.price,
		b.orderItemCode,
		b.transportNum, c.orderItemName
		from diet a join
		orderlist b join
		orderitem c
		where a.dietCode=b.dietCode
		and
		b.orderItemCode = c.orderItemCode and c.orderItemCode BETWEEN 0 and 3
	</select>

</mapper>