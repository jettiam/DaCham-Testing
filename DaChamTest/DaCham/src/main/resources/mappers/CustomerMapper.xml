<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  <mapper namespace="com.wdb3a.CustomerMapper">
  
  <!-- 식단 주문하기 목록 띄우는 쿼리문 -->
  <select id="dietList" resultType="Customer">
  	select d.dietCode, d.dietName, s.sideDImg
	from diet d,dietinfo di, sidedish s
	where d.diseaseCode=#{diseaseCode} and di.dietCode=d.dietCode and di.sideDCode=s.sideDCode and di.sideDType=0 and d.spDietitem=1
	order by d.dietCode

  </select>
  <!-- 특정 식단 정보 띄우는 쿼리문 -->
  <select id="detailOrder" resultType="Customer">
    select d.dietImg, d.dietCode, d.dietName, d.price, s.sideDImg, s.sideDName,s.foodGCode
	from diet d,dietinfo di, sidedish s
	where d.dietCode=#{dietCode} and di.dietCode=d.dietCode and di.sideDCode=s.sideDCode and di.sideDType=0
	order by s.foodGcode  
  </select>
  
  <!-- 특정 식품군 반찬 정보 띄우는 쿼리문 영양정보 포함 -->
  <select id="sideDDetail" resultType="Customer">
  <!-- select s.sideDCode, s.sidedImg,s.sideDname,s.foodGCode, f.kcal,f.carbohydrate,f.protein,f.fat,f.na
from sidedish s,(select a.sideDcode,sum(kcal) kcal,sum(carbohydrate) carbohydrate, sum(protein) protein, sum(fat) fat, sum(na) na
from 
(select si.sideDCode,(si.foodMAmount/100)*f.kcal kcal,(si.foodMAmount/100)*f.protein protein,(si.foodMAmount/100)*f.carbohydrate carbohydrate,(si.foodMAmount/100)*f.na na,(si.foodMAmount/100)*f.fat fat
	from sidedinfo si,foodmaterial f
	where si.foodMCode = f.foodMCode) a
	group by a.sidedcode) f 
where s.sideDCode=f.sideDcode and s.foodGCode=#{foodGCode}; -->
select result.sideDCode, result.sidedImg,result.sideDname,result.foodGCode, result.kcal,result.carbohydrate,result.protein,result.fat,result.na,result.k
from  (select s.sideDCode, s.sidedImg,s.sideDname,s.foodGCode, f.kcal,f.carbohydrate,f.protein,f.fat,f.na,f.k
from sidedish s,(select a.sideDcode,sum(kcal) kcal,sum(carbohydrate) carbohydrate, sum(protein) protein, sum(fat) fat, sum(na) na,sum(k) k
from 
(select si.sideDCode,(si.foodMAmount/100)*f.kcal kcal,(si.foodMAmount/100)*f.protein protein,(si.foodMAmount/100)*f.carbohydrate carbohydrate,(si.foodMAmount/100)*f.na na,(si.foodMAmount/100)*f.fat fat,(si.foodMAmount/100)*f.k k
	from sidedinfo si,foodmaterial f
	where si.foodMCode = f.foodMCode) a
	group by a.sidedcode) f 
where s.sideDCode=f.sideDcode and s.foodGCode=#{foodGCode}) result, dietinfo di
where di.dietCode = #{dietCode} and result.sideDCode= di.sideDCode
order by di.sideDType
  </select>
  <!-- 주문결제 -->
  <insert id="orderRegist">
  	INSERT INTO orderlist (id, dietCode, orderDate, price, dietAmount, orderItemCode, paymentItemCode) 
	VALUES (#{id}, #{dietCode}, now(), #{price}, #{dietAmount}, 2, #{paymentItemCode});
  </insert>
  <!-- 장바구니 상품 주문결제 --> 
  <update id="orderCart">
  UPDATE orderlist SET orderItemCode=2, paymentItemCode=#{paymentItemCode} WHERE  orderCode=#{orderCode};
  </update> 
<!-- 장바구니 등록 -->
  <insert id="cartRegist">
  	INSERT INTO orderlist (id, dietCode, orderDate, price, dietAmount, orderItemCode, paymentItemCode) 
	VALUES (#{id}, #{dietCode}, now(), #{price}, #{dietAmount}, 1, 1);
  </insert>  
  
 
  <!-- 장바구니 확인 쿼리문 -->
  <select id="cartList" resultType="Customer">
  select o.dietCode, o.price, o.orderCode,o.orderDate, o.dietAmount,d.dietName,d.dietImg
from orderlist o, diet d where o.dietCode = d.dietCode and o.id = #{id} and o.orderItemCode = 1
order by o.orderCode desc;
  </select>
  
<select id="myOrderList" resultType="Customer">
  select d.dietImg,d.dietName,o.dietCode,o.price,o.orderCode,o.orderDate,o.dietAmount,o.orderItemCode
from (select dietCode, price, orderCode,orderDate, dietAmount,orderItemCode
from orderlist where id = #{id} and orderItemCode between 2 and 8 or orderItemCode = 0) o,diet d
where o.dietCode = d.dietCode order by o.orderDate desc; 
  </select>


<!-- 가장 최신의 주문번호를 알기 위한 쿼리문, 하나의 정수(주문번호)가 리턴 -->
<select id="recentlyOrderCode" resultType="int">
select max(orderCode)
from orderlist
where id=#{id};
</select>

<!-- 사용자 주문 식단(반찬옵션) 에 insert 하기 위한 쿼리문, 리턴 없음 -->
<insert id="registOrderOption" parameterType="hashmap">
insert into orderoptions
values( #{recentCode}, #{sideCode},3);
</insert>

<!-- 주문에 대한 옵션(반찬들) 가져오는 쿼리문, 리턴 Customer(반찬이름, 반찬이미지) -->
<select id="orderOption" resultType="Customer">
select s.sideDName, s.sideDImg
from orderoptions o, sidedish s
where o.orderCode = #{orderCode} and o.sideDCode = s.sideDCode;
</select>

<!-- 병이름과 정도를 통해 질병코드를 가져오고 질병코드를 가진 식단코드 1개만 반환 -->
<select id="getOneDCode" parameterType="hashmap" resultType="int">
select d.dietCode
from (select diseaseCode
		from disease
		where diseaseName=#{rName} AND judgement=#{rJudg}) s,
		diet d
where s.diseaseCode = d.diseaseCode limit 1;
</select>

<!-- 마이페이지 차트의 내 영양정보 불러오기 용 -->
<select id="myNutri" resultType="Customer">
select sum(kcal)kcal, sum(carbohydrate) carbohydrate,sum(protein) protein, sum(fat) fat,sum(na) na,sum(k) k, sum(ca) ca
from
(select a.sideDcode,sum(f.kcal*a.cu) kcal, sum(f.carbohydrate*a.cu) carbohydrate, sum(f.protein*a.cu) protein, sum(f.fat*cu) fat, sum(f.na*cu) na, sum(f.k*cu) k,
sum(f.ca*cu) ca
      from foodmaterial f,(select s.sideDCode, s.sideDImg,s.sideDName,i.foodMAmount/100 as cu,i.foodMCode
      from sidedish s,sidedinfo i where s.sideDCode=i.sideDCode) a
      where f.foodMCode=a.foodMCode
      group by a.sideDcode) n,
      (select op.sideDcode
from orderlist ol, orderoptions op
where ol.id=#{id} and ol.ordercode=op.ordercode) u
where u.sideDcode=n.sideDcode;
</select>
<!-- 고객 건강정보입력 -->
<insert id="insertMeasure">
INSERT INTO measure (id, measureICode, measureDate, reading) VALUES (#{id},#{measureICode}, now(), #{reading})
</insert>
<!-- 건강정보 중첩확인 -->
<select id="measureCheck" resultType="int">
select count(id) from measure where id=#{id} and measureicode=#{measureICode} and  measureDate =str_to_date(now(),'%Y-%m-%d')
</select>
<!-- 건강정보 불러오기 -->
<select id="measureRead" resultType="Measure">
select m.measureDate,m.reading,mi.measureName,mi.measureUnit,m.measureICode
from measure m, measureitem mi
where m.id=#{id} and m.measureICode = mi.measureICode
order BY m.measureDate, m.measureICode


</select>
  </mapper>